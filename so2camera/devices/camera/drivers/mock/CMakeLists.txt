cmake_minimum_required(VERSION 2.8)
project(camera)

if(CMAKE_COMPILER_IS_GNUCC)
	add_definitions("-pedantic")
	add_definitions("-Wall")
	add_definitions("-Wundef")
	add_definitions("-Wextra")
	add_definitions("-Wunused-parameter")
	# add_definitions("-Wshadow")
	add_definitions("-Wpointer-arith")
	add_definitions("-Wcast-qual")
	add_definitions("-Wno-missing-braces")
	add_definitions("-Wno-missing-field-initializers")
	add_definitions("-Wformat=2")
	add_definitions("-Wswitch-default")
	add_definitions("-Wswitch-enum")
	add_definitions("-Wcast-align")
	add_definitions("-Wstrict-overflow=5")
	add_definitions("-Winline")
	add_definitions("-Wunreachable-code")
	add_definitions("-Wlogical-op")
	add_definitions("-Wfloat-equal")
	add_definitions("-Wstrict-aliasing=2")
	add_definitions("-Wredundant-decls")
	add_definitions("-ggdb3")
	add_definitions("-O0")
	add_definitions("-fno-omit-frame-pointer")
	add_definitions("-ffloat-store")
	add_definitions("-fno-common")
	add_definitions("-fstrict-aliasing")
	add_definitions("-Wmissing-declarations")
endif()

message("=====MOCK_CAMERA=======")
file(COPY fixtures/ DESTINATION fixtures/)
add_definitions(-DCAMERA_MOCK_A_RAW="${CMAKE_CURRENT_SOURCE_DIR}/mock/fixtures/top.raw")
add_definitions(-DCAMERA_MOCK_B_RAW="${CMAKE_CURRENT_SOURCE_DIR}/mock/fixtures/bot.raw")
add_definitions(-DCAMERA_MOCK_A_RAW_DARK="${CMAKE_CURRENT_SOURCE_DIR}/mock/fixtures/top_dark.raw")
add_definitions(-DCAMERA_MOCK_B_RAW_DARK="${CMAKE_CURRENT_SOURCE_DIR}/mock/fixtures/bot_dark.raw")

include_directories( ${OpenCV_INCLUDE_DIRS} )

add_subdirectory(pybind11)
pybind11_add_module(camera camera.cpp ../camera_py.cpp)

if( ${UNIX} )
	find_library(M_LIB m)
	target_link_libraries(camera ${M_LIB})
endif()

target_link_libraries(camera pthread)
